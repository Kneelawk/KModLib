plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id 'io.github.juuxel.loom-quiltflower'
}

String detectedVersion
String releaseTag = System.getenv("RELEASE_TAG")
if (releaseTag != null) {
    detectedVersion = releaseTag.substring(1)
    println("Detected release version: ${detectedVersion}")
} else {
    detectedVersion = project.mod_version
    println("Detected local version: ${detectedVersion}")
}

version = detectedVersion
group = project.maven_group

base {
    archivesName = "${project.archives_base_name}-render"
}

loom {
    accessWidenerPath = file("src/main/resources/kmodlib-render.accesswidener")
}

repositories {
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/releases/"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Mod Menu
    modLocalRuntime "com.terraformersmc:modmenu:${project.mod_menu_version}"
}

processResources {
    inputs.property "version", project.version

    exclude("**/*.xcf")

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}" }
    }
}

runClient {
    args("--width", "1280", "--height", "720")
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        String publishRepo = System.getenv("PUBLISH_REPO")
        if (publishRepo) {
            maven {
                name = "publishRepo"
                url = uri(publishRepo)
            }
        }
    }
}
